State 0:
automaton' -> . automaton [ # ]
-- On INPUT_SYMBOLS_HEADER shift to state 1
-- On inputsymbols shift to state 7
-- On declarations shift to state 30
-- On automaton shift to state 54

State 1:
inputsymbols -> INPUT_SYMBOLS_HEADER . COLON suite_min_nonvide [ STACK_SYMBOLS_HEADER ]
-- On COLON shift to state 2

State 2:
inputsymbols -> INPUT_SYMBOLS_HEADER COLON . suite_min_nonvide [ STACK_SYMBOLS_HEADER ]
-- On LC_LETTER shift to state 3
-- On suite_min_nonvide shift to state 6

State 3:
suite_min_nonvide -> LC_LETTER . [ STACK_SYMBOLS_HEADER ]
suite_min_nonvide -> LC_LETTER . COMMA suite_min_nonvide [ STACK_SYMBOLS_HEADER ]
-- On COMMA shift to state 4
-- On STACK_SYMBOLS_HEADER reduce production suite_min_nonvide -> LC_LETTER 

State 4:
suite_min_nonvide -> LC_LETTER COMMA . suite_min_nonvide [ STACK_SYMBOLS_HEADER ]
-- On LC_LETTER shift to state 3
-- On suite_min_nonvide shift to state 5

State 5:
suite_min_nonvide -> LC_LETTER COMMA suite_min_nonvide . [ STACK_SYMBOLS_HEADER ]
-- On STACK_SYMBOLS_HEADER reduce production suite_min_nonvide -> LC_LETTER COMMA suite_min_nonvide 

State 6:
inputsymbols -> INPUT_SYMBOLS_HEADER COLON suite_min_nonvide . [ STACK_SYMBOLS_HEADER ]
-- On STACK_SYMBOLS_HEADER reduce production inputsymbols -> INPUT_SYMBOLS_HEADER COLON suite_min_nonvide 

State 7:
declarations -> inputsymbols . stacksymbols states initialstate initialstack [ TRANSITIONS_HEADER ]
-- On STACK_SYMBOLS_HEADER shift to state 8
-- On stacksymbols shift to state 14

State 8:
stacksymbols -> STACK_SYMBOLS_HEADER . COLON suite_maj_nonvide [ STATES_HEADER ]
-- On COLON shift to state 9

State 9:
stacksymbols -> STACK_SYMBOLS_HEADER COLON . suite_maj_nonvide [ STATES_HEADER ]
-- On UC_LETTER shift to state 10
-- On suite_maj_nonvide shift to state 13

State 10:
suite_maj_nonvide -> UC_LETTER . [ STATES_HEADER ]
suite_maj_nonvide -> UC_LETTER . COMMA suite_maj_nonvide [ STATES_HEADER ]
-- On COMMA shift to state 11
-- On STATES_HEADER reduce production suite_maj_nonvide -> UC_LETTER 

State 11:
suite_maj_nonvide -> UC_LETTER COMMA . suite_maj_nonvide [ STATES_HEADER ]
-- On UC_LETTER shift to state 10
-- On suite_maj_nonvide shift to state 12

State 12:
suite_maj_nonvide -> UC_LETTER COMMA suite_maj_nonvide . [ STATES_HEADER ]
-- On STATES_HEADER reduce production suite_maj_nonvide -> UC_LETTER COMMA suite_maj_nonvide 

State 13:
stacksymbols -> STACK_SYMBOLS_HEADER COLON suite_maj_nonvide . [ STATES_HEADER ]
-- On STATES_HEADER reduce production stacksymbols -> STACK_SYMBOLS_HEADER COLON suite_maj_nonvide 

State 14:
declarations -> inputsymbols stacksymbols . states initialstate initialstack [ TRANSITIONS_HEADER ]
-- On STATES_HEADER shift to state 15
-- On states shift to state 21

State 15:
states -> STATES_HEADER . COLON suite_chiffres_nonvide [ INIT_STATE_HEADER ]
-- On COLON shift to state 16

State 16:
states -> STATES_HEADER COLON . suite_chiffres_nonvide [ INIT_STATE_HEADER ]
-- On DIGIT shift to state 17
-- On suite_chiffres_nonvide shift to state 20

State 17:
suite_chiffres_nonvide -> DIGIT . [ INIT_STATE_HEADER ]
suite_chiffres_nonvide -> DIGIT . COMMA suite_chiffres_nonvide [ INIT_STATE_HEADER ]
-- On COMMA shift to state 18
-- On INIT_STATE_HEADER reduce production suite_chiffres_nonvide -> DIGIT 

State 18:
suite_chiffres_nonvide -> DIGIT COMMA . suite_chiffres_nonvide [ INIT_STATE_HEADER ]
-- On DIGIT shift to state 17
-- On suite_chiffres_nonvide shift to state 19

State 19:
suite_chiffres_nonvide -> DIGIT COMMA suite_chiffres_nonvide . [ INIT_STATE_HEADER ]
-- On INIT_STATE_HEADER reduce production suite_chiffres_nonvide -> DIGIT COMMA suite_chiffres_nonvide 

State 20:
states -> STATES_HEADER COLON suite_chiffres_nonvide . [ INIT_STATE_HEADER ]
-- On INIT_STATE_HEADER reduce production states -> STATES_HEADER COLON suite_chiffres_nonvide 

State 21:
declarations -> inputsymbols stacksymbols states . initialstate initialstack [ TRANSITIONS_HEADER ]
-- On INIT_STATE_HEADER shift to state 22
-- On initialstate shift to state 25

State 22:
initialstate -> INIT_STATE_HEADER . COLON DIGIT [ INIT_STACK_HEADER ]
-- On COLON shift to state 23

State 23:
initialstate -> INIT_STATE_HEADER COLON . DIGIT [ INIT_STACK_HEADER ]
-- On DIGIT shift to state 24

State 24:
initialstate -> INIT_STATE_HEADER COLON DIGIT . [ INIT_STACK_HEADER ]
-- On INIT_STACK_HEADER reduce production initialstate -> INIT_STATE_HEADER COLON DIGIT 

State 25:
declarations -> inputsymbols stacksymbols states initialstate . initialstack [ TRANSITIONS_HEADER ]
-- On INIT_STACK_HEADER shift to state 26
-- On initialstack shift to state 29

State 26:
initialstack -> INIT_STACK_HEADER . COLON UC_LETTER [ TRANSITIONS_HEADER ]
-- On COLON shift to state 27

State 27:
initialstack -> INIT_STACK_HEADER COLON . UC_LETTER [ TRANSITIONS_HEADER ]
-- On UC_LETTER shift to state 28

State 28:
initialstack -> INIT_STACK_HEADER COLON UC_LETTER . [ TRANSITIONS_HEADER ]
-- On TRANSITIONS_HEADER reduce production initialstack -> INIT_STACK_HEADER COLON UC_LETTER 

State 29:
declarations -> inputsymbols stacksymbols states initialstate initialstack . [ TRANSITIONS_HEADER ]
-- On TRANSITIONS_HEADER reduce production declarations -> inputsymbols stacksymbols states initialstate initialstack 

State 30:
automaton -> declarations . transitions EOF [ # ]
-- On TRANSITIONS_HEADER shift to state 31
-- On transitions shift to state 52

State 31:
transitions -> TRANSITIONS_HEADER . COLON translist [ EOF ]
-- On COLON shift to state 32

State 32:
transitions -> TRANSITIONS_HEADER COLON . translist [ EOF ]
-- On LPARA shift to state 33
-- On translist shift to state 49
-- On transition shift to state 50
-- On EOF reduce production translist -> 

State 33:
transition -> LPARA . DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On DIGIT shift to state 34

State 34:
transition -> LPARA DIGIT . COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On COMMA shift to state 35

State 35:
transition -> LPARA DIGIT COMMA . minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On LC_LETTER shift to state 36
-- On minuscule_ou_vide shift to state 37
-- On COMMA reduce production minuscule_ou_vide -> 

State 36:
minuscule_ou_vide -> LC_LETTER . [ COMMA ]
-- On COMMA reduce production minuscule_ou_vide -> LC_LETTER 

State 37:
transition -> LPARA DIGIT COMMA minuscule_ou_vide . COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On COMMA shift to state 38

State 38:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA . UC_LETTER COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On UC_LETTER shift to state 39

State 39:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER . COMMA DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On COMMA shift to state 40

State 40:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA . DIGIT COMMA stack RPARA [ LPARA EOF ]
-- On DIGIT shift to state 41

State 41:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT . COMMA stack RPARA [ LPARA EOF ]
-- On COMMA shift to state 42

State 42:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA . stack RPARA [ LPARA EOF ]
-- On UC_LETTER shift to state 43
-- On stack shift to state 46
-- On nonemptystack shift to state 48
-- On RPARA reduce production stack -> 

State 43:
nonemptystack -> UC_LETTER . [ RPARA ]
nonemptystack -> UC_LETTER . SEMICOLON nonemptystack [ RPARA ]
-- On SEMICOLON shift to state 44
-- On RPARA reduce production nonemptystack -> UC_LETTER 

State 44:
nonemptystack -> UC_LETTER SEMICOLON . nonemptystack [ RPARA ]
-- On UC_LETTER shift to state 43
-- On nonemptystack shift to state 45

State 45:
nonemptystack -> UC_LETTER SEMICOLON nonemptystack . [ RPARA ]
-- On RPARA reduce production nonemptystack -> UC_LETTER SEMICOLON nonemptystack 

State 46:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack . RPARA [ LPARA EOF ]
-- On RPARA shift to state 47

State 47:
transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA . [ LPARA EOF ]
-- On LPARA reduce production transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA 
-- On EOF reduce production transition -> LPARA DIGIT COMMA minuscule_ou_vide COMMA UC_LETTER COMMA DIGIT COMMA stack RPARA 

State 48:
stack -> nonemptystack . [ RPARA ]
-- On RPARA reduce production stack -> nonemptystack 

State 49:
transitions -> TRANSITIONS_HEADER COLON translist . [ EOF ]
-- On EOF reduce production transitions -> TRANSITIONS_HEADER COLON translist 

State 50:
translist -> transition . translist [ EOF ]
-- On LPARA shift to state 33
-- On translist shift to state 51
-- On transition shift to state 50
-- On EOF reduce production translist -> 

State 51:
translist -> transition translist . [ EOF ]
-- On EOF reduce production translist -> transition translist 

State 52:
automaton -> declarations transitions . EOF [ # ]
-- On EOF shift to state 53

State 53:
automaton -> declarations transitions EOF . [ # ]
-- On # reduce production automaton -> declarations transitions EOF 

State 54:
automaton' -> automaton . [ # ]
-- On # accept automaton

